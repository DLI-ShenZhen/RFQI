% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ms2ClusterFunctions.r
\name{get_ms2Cor_inner}
\alias{get_ms2Cor_inner}
\title{Compute MS2 correlation belonging to identical feature}
\usage{
get_ms2Cor_inner(MS2DB, idx = NULL, n = 2, cores1 = 1, cores2 = 1,
  ppm = 30, sn = 3, maxMS2 = 200)
}
\arguments{
\item{MS2DB}{db.MS2 object}

\item{idx}{if assigned, only compute MS2 similarity matrix of this feature}

\item{n}{minumum number of MS2 features should have, default is 2}

\item{cores1}{numeric threads for idx parallel computing, e.g. simultaneously analysis cores1 feature}

\item{cores2}{numeric threads for parallel computing MS2 similarity belonging to the same feature}

\item{ppm}{m/z tolerance of MS2}

\item{sn}{signal to noise ratio}

\item{maxMS2}{the max number of MS2 belonging to one feature for computing similarity; if appointed, will random select maxMS2 number MS2}
}
\value{
list, names of list are feature name, and elements are MS2 similarity matrix of MS2 belonging to the feature
}
\description{
Compute MS2 correlation belonging to identical feature
}
\details{
Compute MS2 correlation beloning to the same feature. If not appoint feature index, 
this function will analysis all features having MS2 in the db.MS2 object. This step is the most time-comsuming step.
For one feature, time complexity is O(n2), where n is the number of MS2 this feature has. We can analysis m features simultaneously,
and for each feature, we can compare n MS2 simultaneously. m and n corresponses to cores1 and cores2 param.
}
